{
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "description": [
    " Kong Gateway base preset for Renovate.",
    "",
    " Target branches include Gateway Enterprise LTS lines and active nonâ€‘LTS via pattern matching,",
    " plus master branches and the repo default. Reference: Kong Gateway support policy",
    " https://docs.konghq.com/gateway/latest/support-policy/#main"
  ],
  "extends": [
    "Kong/public-shared-renovate//base/github-actions",
    "Kong/public-shared-renovate//overrides/labels(mend,renovate)",
    "Kong/public-shared-renovate//overrides/security-labels(security)"
  ],
  "baseBranchPatterns": [
    "$default",
    "next/2.8.x.x",
    "next/3.4.x.x",
    "next/3.14.x.x",
    "next/3.18.x.x",
    "next/3.22.x.x",
    "/^next\\/3\\.(9|1[0-9])\\.x.*$/"
  ],
  "enabledManagers": [
    "github-actions",
    "custom.regex"
  ],
  "labels": [
    "renovate:{{baseBranch}}",
    "renovate:{{updateType}}",
    "renovate-manager:{{manager}}",
    "skip-changelog",
    "skip-pr-template-validation"
  ],
  "ignoreUnstable": false,
  "pruneStaleBranches": true,
  "logLevelRemap": [
    { "matchMessage": "/findCommitOfTag/", "newLogLevel": "debug" },
    { "matchMessage": "/^lookupUpdates error/", "newLogLevel": "debug" },
    { "matchMessage": "/^No currentVersion or lockedVersion found/", "newLogLevel": "debug" },
    { "matchMessage": "/^Dependency .+ has unsupported/unversioned value/", "newLogLevel": "warn" },
    { "matchMessage": "/^repository problems/", "newLogLevel": "warn" },
    { "matchMessage": "/^lookupUpdates/", "newLogLevel": "debug" },
    { "matchMessage": "/ is not updated /", "newLogLevel": "error" },
    { "matchMessage": "/^Config validation errors found/", "newLogLevel": "error" },
    { "matchMessage": "/HTTP request/", "newLogLevel": "debug" },
    { "matchMessage": "/Skipping bump because newValue is the same/", "newLogLevel": "debug" },
    { "matchMessage": "/^Found no satisfying versions with/", "newLogLevel": "warn" },
    { "matchMessage": "/^Custom manager fetcher/", "newLogLevel": "debug" },
    { "matchMessage": "/^Error while evaluating JSONata expression/", "newLogLevel": "debug" },
    { "matchMessage": "/^Response that has failed validation/", "newLogLevel": "debug" },
    { "matchMessage": "/custom datasource/", "newLogLevel": "debug" },
    { "matchMessage": "/^Error while evaluating/", "newLogLevel": "debug" },
    { "matchMessage": "/^Response that has failed validation/", "newLogLevel": "debug" },
    { "matchMessage": "/^prTitle: /", "newLogLevel": "debug" },
    { "matchMessage": "/^Branch lists/", "newLogLevel": "trace" },
    { "matchMessage": "/^branch\\.isModified\\(\\) = true/", "newLogLevel": "trace" }
  ],
  "customManagers": [
    {
      "customType": "regex",
      "managerFilePatterns": ["/(^|/)perf\\.yml$/"],
      "matchStrings": [
        "uses: ben-z/gh-action-mutex@(?<currentDigest>[0-9a-f]{40}) # (?<currentValue>v.+?)\n"
      ],
      "datasourceTemplate": "github-tags",
      "versioningTemplate": "regex:^v(?<major>\\d+)\\.(?<minor>\\d+)(\\.(?<patch>\\d+))?-(?<prerelease>[^-\\.]+)[-\\.](?<build>\\d+)$",
      "depNameTemplate": "ben-z/gh-action-mutex",
      "depTypeTemplate": "custom.action"
    }
  ],
  "packageRules": [
    {
      "matchManagers": ["github-actions"],
      "matchDepNames": ["/^actions\\/.*/"],
      "groupName": "1st party actions",
      "groupSlug": "1st-party-actions"
    },
    {
      "matchManagers": ["github-actions"],
      "matchDepNames": ["/^docker\\/.*/"],
      "groupName": "official docker actions",
      "groupSlug": "official-docker-actions"
    },
    {
      "matchManagers": ["github-actions"],
      "matchDepNames": ["/^kong\\/.*/i"],
      "groupName": "kong actions",
      "groupSlug": "kong-actions"
    },
    {
      "matchDepNames": ["ben-z/gh-action-mutex"],
      "matchManagers": ["!/custom\\.regex/"],
      "enabled": false
    },
    {
      "matchDepTypes":["action"],
      "matchDepNames":["kong/kong-license"],
      "overrideDatasource": "git-refs",
      "overridePackageName": "https://github.com/kong/kong-license"
    }
  ]
}
